{"version":3,"sources":["CustomEditor.js","App.js","index.js"],"names":["CustomEditor","_","this","context","localize","logo","props","logoSrc","src","menuPanelOrder","group","name","hasTransforms","hasAxes","hasMaps","hasLegend","hasColorbars","hasSliders","hasMenus","children","attr","variant","label","onClick","alert","DefaultEditor","config","editable","App","dataSources","col1","col2","col3","dataSourceOptions","Object","keys","map","value","state","data","layout","frames","window","self","top","imjoyRPC","setupRPC","then","api","export","setup","console","log","run","ctx","sources","options","forceUpdate","className","plotly","onUpdate","setState","useResizeHandler","debug","advancedTraceTypeSelector","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4d41d216.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  PlotlyFold,\n  PanelMenuWrapper,\n  Info,\n  LayoutPanel,\n  Button,\n  SingleSidebarItem,\n  DefaultEditor,\n  GraphCreatePanel,\n  GraphTransformsPanel,\n  GraphSubplotsPanel,\n  StyleLayoutPanel,\n  StyleAxesPanel,\n  StyleMapsPanel,\n  StyleLegendPanel,\n  StyleNotesPanel,\n  StyleShapesPanel,\n  StyleSlidersPanel,\n  StyleImagesPanel,\n  StyleTracesPanel,\n  StyleColorbarsPanel,\n  StyleUpdateMenusPanel,\n  Logo\n} from 'react-chart-editor';\n\n\nexport default class CustomEditor extends DefaultEditor {\n  render() {\n    const _ = this.context.localize;\n    const logo = this.props.logoSrc && <Logo src={this.props.logoSrc} />;\n    return (\n      <PanelMenuWrapper menuPanelOrder={this.props.menuPanelOrder}>\n        {logo ? logo : null}\n        <GraphCreatePanel group={_('Structure')} name={_('Traces')} />\n        <GraphSubplotsPanel group={_('Structure')} name={_('Subplots')} />\n        {this.hasTransforms() && (\n          <GraphTransformsPanel group={_('Structure')} name={_('Transforms')} />\n        )}\n        <StyleLayoutPanel group={_('Style')} name={_('General')} />\n        <StyleTracesPanel group={_('Style')} name={_('Traces')} />\n        {this.hasAxes() && <StyleAxesPanel group={_('Style')} name={_('Axes')} />}\n        {this.hasMaps() && <StyleMapsPanel group={_('Style')} name={_('Maps')} />}\n        {this.hasLegend() && <StyleLegendPanel group={_('Style')} name={_('Legend')} />}\n        {this.hasColorbars() && <StyleColorbarsPanel group={_('Style')} name={_('Color Bars')} />}\n        <StyleNotesPanel group={_('Annotate')} name={_('Text')} />\n        <StyleShapesPanel group={_('Annotate')} name={_('Shapes')} />\n        <StyleImagesPanel group={_('Annotate')} name={_('Images')} />\n        {this.hasSliders() && <StyleSlidersPanel group={_('Control')} name={_('Sliders')} />}\n        {this.hasMenus() && <StyleUpdateMenusPanel group={_('Control')} name={_('Menus')} />}\n        {this.props.children ? this.props.children : null}        \n      \n      {/* ---custom widgets-- */}\n      <LayoutPanel group=\"Metadata\" name=\"info\">\n        <PlotlyFold name=\"PlotlyFold\">\n          <Info attr=\"title\">\n            <p>\n              This custom editor demonstrates the general-purpose container and field components.\n            </p>\n            <p>\n              This is an <code>Info</code> component.\n            </p>\n          </Info>\n        </PlotlyFold>\n      </LayoutPanel>\n      <SingleSidebarItem>\n        <Button variant=\"primary\" label=\"export\" onClick={() => alert('save button clicked!')} />\n      </SingleSidebarItem>\n    </PanelMenuWrapper>\n      \n    );\n  }\n}\n","import React, {Component} from 'react';\nimport plotly from 'plotly.js/dist/plotly';\nimport PlotlyEditor from 'react-chart-editor';\nimport CustomEditor from './CustomEditor';\nimport 'react-chart-editor/lib/react-chart-editor.css';\nimport { imjoyRPC } from 'imjoy-rpc';\n\nconst config = {editable: true};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.dataSources = {\n      col1: [1, 2, 3], // eslint-disable-line no-magic-numbers\n      col2: [4, 3, 2], // eslint-disable-line no-magic-numbers\n      col3: [17, 13, 9], // eslint-disable-line no-magic-numbers\n    };\n\n    this.dataSourceOptions = Object.keys(this.dataSources).map(name => ({\n      value: name,\n      label: name,\n    }));\n\n    this.state = {\n      data: [],\n      layout: {},\n      frames: [],\n    };\n    // if inside an iframe, setup imjoy rpc\n    if (window.self !== window.top) {\n      const self = this;\n      imjoyRPC.setupRPC({name: 'ImJoy Chart Editor'}).then((api)=>{\n        api.export({\n          setup(){\n            console.log(\"imjoy-rpc initialized.\")\n          },\n          run(ctx){\n            debugger\n            if(ctx && ctx.config){\n              self.state = ctx.config;\n            }\n            if(ctx && ctx.data){\n              self.dataSources = ctx.data.sources;\n              self.dataSourceOptions = ctx.data.options || Object.keys(self.dataSources).map(name => ({\n                value: name,\n                label: name,\n              }));\n            }\n            self.forceUpdate();\n          }\n        })\n      })\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <PlotlyEditor\n          data={this.state.data}\n          layout={this.state.layout}\n          config={config}\n          frames={this.state.frames}\n          dataSources={this.dataSources}\n          dataSourceOptions={this.dataSourceOptions}\n          plotly={plotly}\n          onUpdate={(data, layout, frames) => this.setState({data, layout, frames})}\n          useResizeHandler\n          debug\n          advancedTraceTypeSelector\n        >\n          <CustomEditor />\n        </PlotlyEditor>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}