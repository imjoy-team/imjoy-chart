{"version":3,"sources":["CustomEditor.js","App.js","index.js"],"names":["CustomEditor","_","this","context","localize","logo","props","logoSrc","src","menuPanelOrder","group","name","hasTransforms","hasAxes","hasMaps","hasLegend","hasColorbars","hasSliders","hasMenus","children","attr","loadCallback","variant","label","onClick","saveCallback","DefaultEditor","config","editable","loadCSV","url","Promise","resolve","reject","Papa","download","header","dynamicTyping","skipEmptyLines","error","err","file","inputElem","reason","alert","toString","complete","results","data","result","row","Object","entries","key","value","push","transpose","App","load","replace","RegExp","exec","location","search","decodeURIComponent","getUrlParameter","then","dataSources","dataSourceOptions","keys","map","forceUpdate","col1","col2","col3","state","layout","frames","window","self","top","imjoyRPC","setupRPC","api","export","setup","console","log","run","ctx","data_sources","data_sources_options","setState","getState","className","plotly","onUpdate","useResizeHandler","debug","advancedTraceTypeSelector","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.35d4047e.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  PlotlyFold,\n  PanelMenuWrapper,\n  Info,\n  LayoutPanel,\n  Button,\n  SingleSidebarItem,\n  DefaultEditor,\n  GraphCreatePanel,\n  GraphTransformsPanel,\n  GraphSubplotsPanel,\n  StyleLayoutPanel,\n  StyleAxesPanel,\n  StyleMapsPanel,\n  StyleLegendPanel,\n  StyleNotesPanel,\n  StyleShapesPanel,\n  StyleSlidersPanel,\n  StyleImagesPanel,\n  StyleTracesPanel,\n  StyleColorbarsPanel,\n  StyleUpdateMenusPanel,\n} from 'react-chart-editor';\n\nimport Logo from 'react-chart-editor/lib/components/widgets/Logo';\n\nexport default class CustomEditor extends DefaultEditor {\n  render() {\n    const _ = this.context.localize;\n    const logo = this.props.logoSrc && <Logo src={this.props.logoSrc} />;\n    return (\n      <PanelMenuWrapper menuPanelOrder={this.props.menuPanelOrder}>\n        {logo ? logo : null}\n        <GraphCreatePanel group={_('Structure')} name={_('Traces')} />\n        <GraphSubplotsPanel group={_('Structure')} name={_('Subplots')} />\n        {this.hasTransforms() && (\n          <GraphTransformsPanel group={_('Structure')} name={_('Transforms')} />\n        )}\n        <StyleLayoutPanel group={_('Style')} name={_('General')} />\n        <StyleTracesPanel group={_('Style')} name={_('Traces')} />\n        {this.hasAxes() && <StyleAxesPanel group={_('Style')} name={_('Axes')} />}\n        {this.hasMaps() && <StyleMapsPanel group={_('Style')} name={_('Maps')} />}\n        {this.hasLegend() && <StyleLegendPanel group={_('Style')} name={_('Legend')} />}\n        {this.hasColorbars() && <StyleColorbarsPanel group={_('Style')} name={_('Color Bars')} />}\n        <StyleNotesPanel group={_('Annotate')} name={_('Text')} />\n        <StyleShapesPanel group={_('Annotate')} name={_('Shapes')} />\n        <StyleImagesPanel group={_('Annotate')} name={_('Images')} />\n        {this.hasSliders() && <StyleSlidersPanel group={_('Control')} name={_('Sliders')} />}\n        {this.hasMenus() && <StyleUpdateMenusPanel group={_('Control')} name={_('Menus')} />}\n        {this.props.children ? this.props.children : null}        \n      \n      {/* ---custom widgets-- */}\n      <LayoutPanel group=\"Metadata\" name=\"info\">\n        <PlotlyFold name=\"PlotlyFold\">\n          <Info attr=\"title\">\n            <p>\n              This custom editor demonstrates the general-purpose container and field components.\n            </p>\n            <p>\n              This is an <code>Info</code> component.\n            </p>\n          </Info>\n        </PlotlyFold>\n      </LayoutPanel>\n      { this.props.loadCallback && \n        <SingleSidebarItem>\n          <Button variant=\"primary\" label=\"load\" onClick={this.props.loadCallback} />\n        </SingleSidebarItem>\n      }\n      { this.props.saveCallback && \n        <SingleSidebarItem>\n          <Button variant=\"primary\" label=\"save\" onClick={this.props.saveCallback} />\n        </SingleSidebarItem>\n      }\n    </PanelMenuWrapper>\n      \n    );\n  }\n}\n","import React, {Component} from 'react';\nimport plotly from 'plotly.js/dist/plotly';\nimport PlotlyEditor from 'react-chart-editor';\nimport CustomEditor from './CustomEditor';\nimport 'react-chart-editor/lib/react-chart-editor.css';\nimport { imjoyRPC } from 'imjoy-rpc';\nimport * as Papa from 'papaparse';\n\nconst config = {editable: true};\n\nfunction loadCSV(url){\n  return new Promise((resolve, reject)=>{\n    Papa.parse(url, {\n      download: true,\n      header: true,\n      dynamicTyping: true,\n      skipEmptyLines: true,\n      error: (err, file, inputElem, reason)=> {\n          alert('Falied to load the table: ' + reason.toString())\n          reject(reason)\n      },\n      complete: (results) => {\n        resolve(transpose(results.data))\n      }\n  })\n  })\n  \n}\n\nfunction transpose(data) {\n  let result = {};\n  for (let row of data) {\n    for (let [key, value] of Object.entries(row)) {\n        result[key] = result[key] || [];\n        result[key].push(value); \n    }\n  }\n  return result;\n}\n\nfunction getUrlParameter(name) {\n  name = name.replace(/[\\[]/, \"\\\\[\").replace(/[\\]]/, \"\\\\]\");\n  var regex = new RegExp(\"[\\\\?&]\" + name + \"=([^&#]*)\");\n  var results = regex.exec(location.search);\n  return results === null\n    ? \"\"\n    : decodeURIComponent(results[1].replace(/\\+/g, \" \"));\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    let load = getUrlParameter('load');\n    if(load){\n      loadCSV(load).then((data)=>{\n        this.dataSources = data\n        this.dataSourceOptions = Object.keys(this.dataSources).map(name => ({\n          value: name,\n          label: name,\n        }));\n        this.forceUpdate()\n      })\n    }\n    else {\n      this.dataSources = {\n        col1: [1, 2, 3], // eslint-disable-line no-magic-numbers\n        col2: [4, 3, 2], // eslint-disable-line no-magic-numbers\n        col3: [17, 13, 9], // eslint-disable-line no-magic-numbers\n      };\n  \n      this.dataSourceOptions = Object.keys(this.dataSources).map(name => ({\n        value: name,\n        label: name,\n      }));\n    }\n    this.state = {\n      data: [],\n      layout: {},\n      frames: [],\n    };\n    // if inside an iframe, setup imjoy rpc\n    if (window.self !== window.top) {\n      const self = this;\n      imjoyRPC.setupRPC({name: 'ImJoy Chart Editor'}).then((api)=>{\n        api.export({\n          setup(){\n            console.log(\"imjoy-rpc initialized.\")\n          },\n          run(ctx){\n            if(ctx && ctx.data){\n              self.state = ctx.data || {\n                data: [],\n                layout: {},\n                frames: []\n              };\n              self.dataSources = ctx.data.data_sources || {};\n              self.dataSourceOptions = ctx.data.data_sources_options || Object.keys(self.dataSources).map(name => ({\n                value: name,\n                label: name,\n              }));\n              if(self.state.data_sources)\n                delete self.data.data_sources;\n              if(self.state.data_sources_options)\n                delete self.data.data_sources_options;\n            }\n            self.forceUpdate();\n          },\n          setState(state){\n            self.state = state;\n            self.forceUpdate();\n          },\n          getState(){\n            return self.state;\n          }\n        })\n      })\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <PlotlyEditor\n          data={this.state.data}\n          layout={this.state.layout}\n          config={config}\n          frames={this.state.frames}\n          dataSources={this.dataSources}\n          dataSourceOptions={this.dataSourceOptions}\n          plotly={plotly}\n          onUpdate={(data, layout, frames) => this.setState({data, layout, frames})}\n          useResizeHandler\n          debug\n          advancedTraceTypeSelector\n        >\n          <CustomEditor \n            logoSrc={\"./static/icons/favicon-96x96.png\"}\n            saveCallback={()=>{\n              console.log('saving...',this.state)\n            }}\n          />\n        </PlotlyEditor>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}